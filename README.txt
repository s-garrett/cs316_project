The front end HTML static pages are all structured in similar design, consisting of header containing the app name and navigation bars to move through different pages containing our data. The home page contains an image file and utilizes javascript animation for the site's slogan. Athlete and teams page contain queries from our database and hypothetical meets page uses dropdown box forms to record user selections in creating its output. Jinga template used in conjunction with html to upload queries from database in our dynamic webpages containing individual teams and individual athletes with records of personal bests by event type.Front end was constructed using bootstrap and html template from colorlib. Code has models template with the sqlalchemy models of the database tables and then has the app.py which runs the main app. 

This is relatively easy to setup and run if you have the packages all installed. The packages necessary are in the import statements in the app.py file. Once all the packages are installed, using the terminal switch to the directory of the folder. Run the psql commands to created a db called final_proj, and then run the psql CreateDBProj.sql file and LoadDB sql file. After this is done, cd into the flask_proj folder. The run the flask app with python app.py and then open up the browser to the address returned in the terminal. 